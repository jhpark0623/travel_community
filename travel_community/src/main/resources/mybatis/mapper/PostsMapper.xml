<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boot.commu.mapper.PostsMapper">

  <!-- 게시글 ID로 상세 조회 (게시글 + 사용자 닉네임 + 카테고리명 + 지역명 조인 포함) -->
  <select id="getPostDetailById" parameterType="int" resultType="com.boot.commu.model.PostsDetailDTO">
    select 
      p.id,
      p.user_id,
      p.category_id,
      p.city_id,
      p.title,
      p.content,
      to_char(p.created_at, 'YYYY-MM-DD HH24:MI') as created_at,
      to_char(p.updated_at, 'YYYY-MM-DD HH24:MI') as updated_at,
      p.view_count,
      p.like_count,
      p.state,

      u.nickname as nickname,           -- 작성자 닉네임
      c.category as category_name,     -- 카테고리명
      rc.name as city_name,            -- 도시명
      rp.name as province_name         -- 도/광역시명

    from a_posts p 
    join a_users u on p.user_id = u.id
    join a_category c on p.category_id = c.id
    join a_region_city rc on p.city_id = rc.id
    join a_region_province rp on rc.province_id = rp.id

    where p.id = #{id}
  </select>

  <!-- 게시글 조회수 1 증가 -->
  <update id="view_countup" parameterType="int">
    update a_posts
    set view_count = view_count + 1
    where id = #{id}
  </update>
  
  <update id="softDeletePost" parameterType="int">
	   update a_posts
	   set state = 'N'
	   where id = #{id}
  </update>
  
    <!-- 좋아요 여부 조회 -->
  <select id="isPostLiked" resultType="int">
    select count(*)
    from a_post_likes
    where post_id = #{postId}
      and user_id = #{userId}
  </select>

  <!-- 좋아요 등록 (MAX + 1 방식) -->
  <insert id="insertLike">
    insert into a_post_likes (id, post_id, user_id)
    values (
      (select nvl(max(id), 0) + 1 from a_post_likes),
      #{postId},
      #{userId}
    )
  </insert>

  <!-- 좋아요 취소 -->
  <delete id="deleteLike">
    delete from a_post_likes
    where post_id = #{postId}
      and user_id = #{userId}
  </delete>
  
  <select id="getLikeCount" resultType="int">
	 select count(*) from a_post_likes where post_id = #{postId}
  </select>
  
  <!-- 현재 게시글 ID보다 작은 글 중 가장 큰 ID (이전글) -->
	<select id="getPrevPostId" parameterType="map" resultType="int">
	  <![CDATA[
	    select max(id)
	    from a_posts
	    where id < #{id}
	      and category_id = #{category_id}
	      and state = 'Y'
	  ]]>
	</select>
	
	<!-- 현재 게시글 ID보다 큰 글 중 가장 작은 ID (다음글) -->
	<select id="getNextPostId" parameterType="map" resultType="int">
	  <![CDATA[
	    select min(id)
	    from a_posts
	    where id > #{id}
	      and category_id = #{category_id}
	      and state = 'Y'
	  ]]>
	</select>
	
	<!-- 좋아요 수 +1 -->
	<update id="incrementLikeCount" parameterType="int">
	  update a_posts
	  set like_count = like_count + 1
	  where id = #{postId}
	</update>
	
	<!-- 좋아요 수 -1 -->
	<update id="decrementLikeCount" parameterType="int">
	  update a_posts
	  set like_count = like_count - 1
	  where id = #{postId}
	</update>
	
	<select id="getProvinceList" resultType="province">
		SELECT * FROM
		a_region_province
	</select>

	<select id="getCityList" parameterType="int" resultType="city">
		SELECT *
		FROM a_region_city where province_id = #{provinceCode}
	</select>

	<!-- 개시글 작성 -->
	<insert id="insertPost" parameterType="posts">

		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			SELECT
			NVL(MAX(id), 0) + 1
			FROM a_posts
		</selectKey>

		INSERT INTO a_posts (id,
		user_id, category_id, city_id, title, content)
		VALUES(#{id}, #{user_id},
		#{category_id},
		#{city_id}, #{title},
		#{content})
	</insert>

	<!-- 새로운 해시태그 저장 -->
	<insert id="insertHashtag" parameterType="hashtag">
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			SELECT
			NVL(MAX(id), 0) + 1
			FROM a_hashtags
		</selectKey>

		INSERT INTO a_hashtags VALUES(#{id}, #{hashtag})
	</insert>

	<!-- 해시태그로 해시태그id출력 (해시태그가 없을경우 0 출력) -->
	<select id="selectHashtagId" parameterType="String"
		resultType="int">
		SELECT NVL(max(id), 0) FROM a_hashtags WHERE hashtag =
		#{hashtag}
	</select>

	<!-- 게시글에 등록된 해시태그 저장 -->
	<insert id="insertPostHashtag" parameterType="hashmap">
		INSERT INTO
		a_post_hashtag values(#{post_id}, #{hashtag_id})
	</insert>

	<!-- 게시글 수정 시 수정 폼에 보여줄 데이터 호출 -->
	<select id="selectPostModifyDetail" parameterType="int"
		resultType="postModify">
		SELECT p.id, p.user_id, p.category_id, p.city_id, p.title,
		p.content, rc.province_id FROM a_posts p LEFT JOIN a_region_city rc ON
		p.city_id = rc.id WHERE p.id = #{id}
	</select>

	<!-- 게시글에 등록되있던 해시태그 호출 -->
	<select id="getHashtag" parameterType="int" resultType="String">
		SELECT
		hashtag FROM a_hashtags h LEFT JOIN a_post_hashtag ph ON h.id =
		ph.hashtag_id WHERE ph.post_id = #{id}
	</select>

	<!-- 게시글에서 삭제된 해시태그 제거 -->
	<delete id="deletePostHashtag" parameterType="hashmap">
		DELETE FROM
		a_post_hashtag WHERE post_id = #{post_id} AND hashtag_id = (SELECT id
		FROM a_hashtags WHERE hashtag = #{hashtag})
	</delete>

	<!-- 게시글 업데이트 -->
	<update id="updatePost" parameterType="posts">
		UPDATE a_posts SET
		title =
		#{title}, content = #{content}, category_id = #{category_id},
		city_id =
		#{city_id}, updated_at = sysdate WHERE id = #{id}
	</update>
	
</mapper>
